name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      test_type:
        description: 'Select test type'
        required: true
        default: 'basic'
        type: choice
        options:
        - basic (Run linting, type check, and build)
        - full (Run all tests including cross-platform Tauri builds)
        - tauri-only (Run only cross-platform Tauri build tests)
      platforms:
        description: 'Select platforms to build (only used for full/tauri-only)'
        required: false
        type: choice
        default: 'all'
        options:
        - all (Build for all platforms)
        - ubuntu (Linux only)
        - windows (Windows only)
        - macos (macOS only)
        - ubuntu-windows (Linux + Windows)
        - ubuntu-macos (Linux + macOS)
        - windows-macos (Windows + macOS)
      upload_artifacts:
        description: 'Upload build artifacts (consumes storage space)'
        required: false
        type: boolean
        default: false

jobs:
  test:
    if: ${{ github.event_name == 'workflow_dispatch' && (github.event.inputs.test_type == 'basic' || github.event.inputs.test_type == 'full') }}
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'pnpm'
    
    - name: Setup pnpm
      uses: pnpm/action-setup@v2
      with:
        version: latest
    
    - name: Install dependencies
      run: pnpm install --frozen-lockfile
    
    - name: Run linting
      run: pnpm lint
    
    - name: Type check
      run: pnpm tsc --noEmit
    
    - name: Build
      run: pnpm build

  test-tauri-ubuntu:
    if: ${{ github.event_name == 'workflow_dispatch' && (github.event.inputs.test_type == 'tauri-only' || github.event.inputs.test_type == 'full') && (github.event.inputs.platforms == 'all' || github.event.inputs.platforms == 'ubuntu' || github.event.inputs.platforms == 'ubuntu-windows' || github.event.inputs.platforms == 'ubuntu-macos') }}
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'pnpm'
    
    - name: Setup pnpm
      uses: pnpm/action-setup@v2
      with:
        version: latest
    
    - name: Install dependencies
      run: pnpm install --frozen-lockfile
    
    - name: Setup Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        override: true
    
    - name: Install Tauri CLI
      run: pnpm tauri --version
    
    - name: Build Tauri app
      run: pnpm tauri build --debug
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Upload build artifacts (if requested)
      if: ${{ github.event.inputs.upload_artifacts }}
      uses: actions/upload-artifact@v4
      with:
        name: chatless-debug-ubuntu
        path: src-tauri/target/debug/bundle/
        retention-days: 7

  test-tauri-windows:
    if: ${{ github.event_name == 'workflow_dispatch' && (github.event.inputs.test_type == 'tauri-only' || github.event.inputs.test_type == 'full') && (github.event.inputs.platforms == 'all' || github.event.inputs.platforms == 'windows' || github.event.inputs.platforms == 'ubuntu-windows' || github.event.inputs.platforms == 'windows-macos') }}
    runs-on: windows-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'pnpm'
    
    - name: Setup pnpm
      uses: pnpm/action-setup@v2
      with:
        version: latest
    
    - name: Install dependencies
      run: pnpm install --frozen-lockfile
    
    - name: Setup Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        override: true
    
    - name: Install Tauri CLI
      run: pnpm tauri --version
    
    - name: Build Tauri app
      run: pnpm tauri build --debug
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Upload build artifacts (if requested)
      if: ${{ github.event.inputs.upload_artifacts }}
      uses: actions/upload-artifact@v4
      with:
        name: chatless-debug-windows
        path: src-tauri/target/debug/bundle/
        retention-days: 7

  test-tauri-macos:
    if: ${{ github.event_name == 'workflow_dispatch' && (github.event.inputs.test_type == 'tauri-only' || github.event.inputs.test_type == 'full') && (github.event.inputs.platforms == 'all' || github.event.inputs.platforms == 'macos' || github.event.inputs.platforms == 'ubuntu-macos' || github.event.inputs.platforms == 'windows-macos') }}
    runs-on: macos-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'pnpm'
    
    - name: Setup pnpm
      uses: pnpm/action-setup@v2
      with:
        version: latest
    
    - name: Install dependencies
      run: pnpm install --frozen-lockfile
    
    - name: Setup Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        override: true
    
    - name: Install Tauri CLI
      run: pnpm tauri --version
    
    - name: Build Tauri app
      run: pnpm tauri build --debug
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Upload build artifacts (if requested)
      if: ${{ github.event.inputs.upload_artifacts }}
      uses: actions/upload-artifact@v4
      with:
        name: chatless-debug-macos
        path: src-tauri/target/debug/bundle/
        retention-days: 7 