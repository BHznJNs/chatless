name: Build and Test

on:
  workflow_dispatch:
    inputs:
      action:
        description: 'Select action: "test" runs checks, "build" creates artifacts.'
        required: true
        default: 'test'
        type: choice
        options:
        - test
        - build
      platforms:
        description: 'Select platforms (only for the "build" action).'
        required: false
        type: choice
        default: 'all'
        options:
        - all
        - ubuntu
        - windows
        - macos
        - ubuntu-windows
        - ubuntu-macos
        - windows-macos
      remark:
        description: 'Optional remark information.'
        required: false
        type: string
        default: ''

jobs:
  test:
    if: ${{ github.event.inputs.action == 'test' }}
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'pnpm'
    
    - name: Setup pnpm
      uses: pnpm/action-setup@v2
      with:
        version: latest
    
    - name: Install dependencies
      run: pnpm install --frozen-lockfile
    
    - name: Run linting
      run: pnpm lint
    
    - name: Type check
      run: pnpm tsc --noEmit
    
    - name: Build
      run: pnpm build
    
    - name: Test Tauri build
      run: pnpm tauri build --debug
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build-ubuntu:
    if: ${{ github.event.inputs.action == 'build' && (github.event.inputs.platforms == 'all' || github.event.inputs.platforms == 'ubuntu' || github.event.inputs.platforms == 'ubuntu-windows' || github.event.inputs.platforms == 'ubuntu-macos') }}
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'pnpm'
    - name: Setup pnpm
      uses: pnpm/action-setup@v2
      with:
        version: latest
    - name: Install dependencies
      run: pnpm install --frozen-lockfile
    - name: Setup Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        override: true
    - name: Install Tauri CLI
      run: pnpm tauri --version
    - name: Build Tauri app
      run: pnpm tauri build
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Upload build artifacts (Linux)
      uses: actions/upload-artifact@v4
      with:
        name: chatless-ubuntu
        # 精准过滤 .AppImage 和 .deb 文件
        path: |
          src-tauri/target/release/bundle/appimage/*.AppImage
          src-tauri/target/release/bundle/deb/*.deb
        retention-days: 14

  build-windows:
    if: ${{ github.event.inputs.action == 'build' && (github.event.inputs.platforms == 'all' || github.event.inputs.platforms == 'windows' || github.event.inputs.platforms == 'ubuntu-windows' || github.event.inputs.platforms == 'windows-macos') }}
    runs-on: windows-latest
    
    steps:
    - uses: actions/checkout@v4
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'pnpm'
    - name: Setup pnpm
      uses: pnpm/action-setup@v2
      with:
        version: latest
    - name: Install dependencies
      run: pnpm install --frozen-lockfile
    - name: Setup Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        override: true
    - name: Install Tauri CLI
      run: pnpm tauri --version
    - name: Build Tauri app
      run: pnpm tauri build
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Upload build artifacts (Windows)
      uses: actions/upload-artifact@v4
      with:
        name: chatless-windows
        # 精准过滤 .msi 和 .exe.zip 文件
        path: |
          src-tauri/target/release/bundle/msi/*.msi
          src-tauri/target/release/bundle/nsis/*.exe.zip
        retention-days: 14

  build-macos:
    if: ${{ github.event.inputs.action == 'build' && (github.event.inputs.platforms == 'all' || github.event.inputs.platforms == 'macos' || github.event.inputs.platforms == 'ubuntu-macos' || github.event.inputs.platforms == 'windows-macos') }}
    runs-on: macos-latest
    
    steps:
    - uses: actions/checkout@v4
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'pnpm'
    - name: Setup pnpm
      uses: pnpm/action-setup@v2
      with:
        version: latest
    - name: Install dependencies
      run: pnpm install --frozen-lockfile
    - name: Setup Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        override: true
    - name: Install Tauri CLI
      run: pnpm tauri --version
    - name: Build Tauri app
      run: pnpm tauri build
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Upload build artifacts (macOS)
      uses: actions/upload-artifact@v4
      with:
        name: chatless-macos
        # 精准过滤 .dmg 文件
        path: src-tauri/target/release/bundle/dmg/*.dmg
        retention-days: 14